name: Rust

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Update Rust
      run: rustup update

    - name: Rust version
      run: rustc -vV

    - name: Build debug version
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose

    - name: Build release version
      run: cargo build --release --verbose

    - name: Build demo site
      run: |
        cargo run --bin code-maven -- web --root test_cases/demo/ --outdir _site/

    - name: Rebuild the demo site
      run: |
        cargo run --bin code-maven -- web --root test_cases/demo/  --outdir _site/
        rm -rf _site/*
        cargo run --bin code-maven -- web --root test_cases/demo/  --outdir _site/

    - name: Generate demo site and compare to the stored version
      run: ./test.sh

    - name: Check cargo fmt
      run: cargo fmt --check

    - name: Clippy stop at any warning
      run: cargo clippy -- --deny warnings

    - name: Checkout repo of https://israel.szabgab.com/
      uses: actions/checkout@v4
      with:
        repository: 'szabgab/israel.szabgab.com'
        token: ${{ secrets.MY_GITHUB_TOKEN }}
        path: sites/israel.szabgab.com

    - name: Checkout repo of https://izrael.szabgab.com/
      uses: actions/checkout@v4
      with:
        repository: 'szabgab/izrael.szabgab.com'
        token: ${{ secrets.MY_GITHUB_TOKEN }}
        path: sites/izrael.szabgab.com

        #    - name: Check all the sites
        #      run: |
        #        ./check_sites.sh

    - name: Generate the web site of the generator
      run: |
        rm -rf _site/*
        cargo run --bin code-maven -- web --root site  --outdir _site/
        cp target/release/code-maven _site/code-maven

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
